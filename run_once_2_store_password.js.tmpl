#!/usr/bin/gjs

const Secret = imports.gi.Secret;

const calls = [];
const schema = new Secret.Schema(
  "org.gnupg.Passphrase",
  Secret.SchemaFlags.NONE,
  {
    "keygrip": Secret.SchemaAttributeType.STRING,
    "stored-by": Secret.SchemaAttributeType.STRING,
  }
);

{{ range $key := list "vvwkphf3plex6suh33e5dasa3q" "y43p3o6pj4boi3j5bjpdu7ylta" -}}

{{- $password := "" -}}
{{- $keygrip := "" -}}

{{- range (onepassword $key).details.sections }}
  {{- if eq .title "info" }}
    {{- range .fields }}
      {{- if eq .t "password" }}
        {{- $password = .v }}
      {{-  end }}
      {{- if eq .t "keygrip" }}
        {{- $keygrip = .v }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end -}}

calls.push(() => {
  const attributes = {
    "keygrip": {{ printf "%s%s" "n/" $keygrip | printf "%q" }},
    "stored-by": "GnuPG Pinentry",
  };

  Secret.password_store_sync(
    schema,
    attributes,
    Secret.COLLECTION_DEFAULT,
    {{ printf "%s%s" "GnuPG: n/" $keygrip | printf "%q" }},
    {{ printf "%q" $password }},
    null,
  );
});

{{ end -}}

calls.forEach(call => {
  call();
})
